name: main
on:
  push:
    branches: [main]
  pull_request:
    branches:
      - '**'
jobs:
  create-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.18.4

      - name: Get yarn cache dir
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn global cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Restore node_modules cache for repository
        uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-root-node-modules-

      - run: yarn --pure-lockfile --ignore-optional
      - run: (cd with-tailwind && yarn)
      - run: yarn lint

      - name: Create basic project
        uses: ./.github/actions/build-and-test-project
        with:
          cli-input: 'init -d out -n create-react-project-app'
          test-task: basic

      - name: Add Tailwind
        uses: ./.github/actions/build-and-test-project
        with:
          cli-input: 'with-tailwind -d out'
          test-task: with-tailwind

      - name: Add Heroku deployment
        uses: ./.github/actions/build-and-test-project
        with:
          cli-input: 'with-heroku-deploy -d out --app my-heroku-app --deployBranch project'
          test-task: with-heroku-deploy

      - name: Checkout deploy branch
        uses: actions/checkout@v2
        with:
          ref: project
          path: project-repo

      - name: Create commit with changes to generated project
        id: git-commit
        run: |
          cp -R project-repo/.git out/.git
          rm -rf out/node_modules
          rm -rf project-repo
          mv out project-repo
          cd project-repo
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git diff --quiet && git diff --staged --quiet || \
            git commit -m "[gh-actions] Push new version of the project"

      # Sync only for "main" branch.
      - name: Sync created project with branch
        if: github.ref == 'refs/heads/main'
        run: |
          cd project-repo
          git push -f
